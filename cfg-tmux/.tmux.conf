bg=$gruvbox_bg
dark=$gruvbox_blue
lite=$gruvbox_fg

## set
set  -g status "on"
set  -g status-bg $bg
set  -g status-fg $bg
# set  -g status-style none  ## ,dim,bold,bright,none
set  -g status-interval 2
set  -g status-left-length 1000
set  -g status-position top
set  -g default-terminal "tmux-256color"
## |                    .- xterm-256color  ## works for italic
## |                    |- tmux
## '--> other options --|- tmux-256color  ## works for italic
##                      |- screen
##                      '- screen-256color  ## previously used (before italic)

set  -s escape-time 5000          ## allows for faster key repetition
set  -g repeat-time 0             ## allow the arrow key to be used immediately after changing windows
set  -g renumber-windows on       ## renumber windows when a window is closed
set  -g base-index 1              ## start windows numbering at 1
set  -g display-time 3000         ## display message time
set  -g display-panes-time 3000   ## display panes time
set  -g clock-mode-colour $dark
set  -g clock-mode-style 12       ## 24
set  -g message-style fg=$gruvbox_yellow  ## bg=$gruvbox_red
set  -g status-justify left       ## align window list
set  -g history-limit 50000
setw -g aggressive-resize on      ## fix being limited by the smallest screen resolution on all screens when using the same session on multiple screens
setw -g pane-base-index 1         ## start pane numbering at 1
setw -g automatic-rename on       ## rename window to reflect current program
setw -g window-status-separator " "
# setw -g mode-style 'fg=colour255 bg=colour5 bold'
# set -g set-titles-string "#T"   ## will display user@host:*****
# set -g set-titles on            ## set terminal title
# setw -g monitor-activity off
# set -g visual-activity off
# set -g mouse-select-pane on
# set -g mouse-select-window on
# setw -g mode-mouse on


## window
## inactive window
set-window-option -g window-status-style          fg=$lite,bg=default
set-window-option -g window-status-format         ' #{window_name}'  # '#{=/5/~:window_name}'
## active window
set-window-option -g window-status-current-style  fg=$dark,bg=default
set-window-option -g window-status-current-format ' #{window_name}'

## ?? (https://github.com/potamides/dotfiles/blob/master/.tmux.conf)
set-window-option -g window-status-activity-style bg=colour37
set-window-option -g window-status-activity-style fg=colour118


## pane
set  -g display-panes-colour        $gruvbox_gray  ## inactive pane color when display panes is triggered
set  -g display-panes-active-colour $dark          ## active pane color when display panes is triggered
set  -g pane-border-style           fg=$gruvbox_gray_d  ## inactive pane border
set  -g pane-active-border-style    fg=$dark       ## active pane border
# set  -g pane-border-status top  ## bottom
#set  -g pane-border-format ' \
##([ ! #{pane_current_command} == "lf" ] && { cd #{pane_current_path}; ~/main/scripts/tmux-statusline.sh pwd ;} || echo "·") \
#── \
##(cd #{pane_current_path}; ~/main/scripts/tmux-statusline.sh info) \
#── \
##(cd #{pane_current_path}; ~/main/scripts/tmux-statusline.sh git) '


## statuline
set  -g status-left  " "
set -ag status-left  "#[fg=$gruvbox_orange, bg=$bg,nobold,none]#(~/main/scripts/tmux-statusline.sh if_kaddy #{pane_current_path})"
set -ag status-left  "#[fg=$lite,           bg=$bg,nobold,none]#(~/main/scripts/tmux-statusline.sh info #{pane_current_path})"
set -ag status-left  " "
set -ag status-left  "#[fg=$gruvbox_gray,   bg=$bg,nobold,none]#(~/main/scripts/tmux-statusline.sh git #{pane_current_path})"
set -ag status-left  "#[fg=$lite]  "
set -ag status-left  '#[fg=$lite,           bg=$bg,nobold,none]#S/#(tmux list-sessions | wc -l)'  ## NOTE exceptionally used #(** | wc -l) instead of #(wc -l < <(**)) to display correctly on mint
set -ag status-left  " "
set  -g status-right " "
set -ag status-right "#[fg=$gruvbox_yellow, bg=$bg,nobold,none]#(~/main/scripts/tmux-statusline.sh if_dell)"
set -ag status-right "#[fg=$gruvbox_purple, bg=$bg,nobold,none]#(~/main/scripts/tmux-statusline.sh if_ssh)"
set -ag status-right "#[fg=$gruvbox_green,  bg=$bg,nobold,none]#{?mouse,MOUSE ,}"


## binds

## set prefix
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix


## tmux list-commands




## NOTES

## https://stackoverflow.com/questions/60106672/prevent-tmuxs-pane-title-from-being-updated
# [ -n "$TMUX" ] && tmux set -p @mytitle "foo"
# set -g pane-border-format "#{@mytitle}"

## #{?mouse,MOUSE-ON,MOUSE-OFF}"

## change pane fg and bg
# select-pane -t:.1 -P 'fg=blue,bg=red'

## https://gist.github.com/dusenberrymw/638359ea1ce409a2232375edb4a99948
# x:y.z  ## x = session, y is wondow, z is pane

## dump live tmux buffer to a file (https://gist.github.com/dusenberrymw/638359ea1ce409a2232375edb4a99948)
# :capture-pane -S -32768 ; save-buffer FILENAME_HERE   ## save at least the last 32,768 lines from the buffer

## smart pane switching with awareness of vim splits (https://github.com/christoomey/vim-tmux-navigator)
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

## logging (https://github.com/kamiyamak/tmux/blob/master/.tmux.conf)
## C-b C-p Start logging
# bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
## C-b C-o Stop logging
# bind-key C-o pipe-pane \; display-message "Logging end."

## #P                      returns pane index (e.g. 1)
## #{pane_index}           returns pane index (e.g. 1)
## #T                      returns pane title (e.g. nnnn@acer:/home/nnnn/downloads)
## #{pane_title}           returns pane title (e.g. nnnn@acer:/home/nnnn/downloads)
## #I                      returns window index (e.g. 1)
## #W                      returns window name (e.g. run)
## #S                      returns session name/index (e.g. 1, sh, py, etc)
## #{pane_current_command} returns vim,lf,etc
## #{pane_current_path}    returns /home/nnnn/downloads
## #{pane_pid}             returns 252057
## #{window_name}          returns 0-test
## #{window_active}        returns 0 if not active, is empty if active
## #H                      returns acer
## vv https://unix.stackexchange.com/questions/564618/set-tmux-pane-title-to-user-defined-if-exists-else-current-working-file-or-dire:
## setw -g pane-border-format ' #{=/15/…:pane_title} [#{=/-20/…:pane_current_command}] #(pgrep -P "#{pane_pid}" | tr "\n" " ")#{pane_current_path} #{?alternate_on,<Alt Mode> ,}'
